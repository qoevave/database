"use strict";(self.webpackChunkdatabase=self.webpackChunkdatabase||[]).push([[403],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),u=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=u(a),m=r,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return a?n.createElement(b,l(l({ref:t},c),{},{components:a})):n.createElement(b,l({ref:t},c))}));function m(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,l=new Array(o);l[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var u=2;u<o;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}p.displayName="MDXCreateElement"},5162:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(7294),r=a(6010);const o="tabItem_Ymn6";function l(e){let{children:t,hidden:a,className:l}=e;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(o,l),hidden:a},t)}},5488:(e,t,a)=>{a.d(t,{Z:()=>m});var n=a(7462),r=a(7294),o=a(6010),l=a(2389),i=a(7392),s=a(7094),u=a(2466);const c="tabList__CuJ",d="tabItem_LNqP";function p(e){var t,a;const{lazy:l,block:p,defaultValue:m,values:b,groupId:k,className:v}=e,f=r.Children.map(e.children,(e=>{if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=b?b:f.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),y=(0,i.l)(h,((e,t)=>e.value===t.value));if(y.length>0)throw new Error('Docusaurus error: Duplicate values "'+y.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const g=null===m?m:null!=(t=null!=m?m:null==(a=f.find((e=>e.props.default)))?void 0:a.props.value)?t:f[0].props.value;if(null!==g&&!h.some((e=>e.value===g)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+h.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:w,setTabGroupChoices:_}=(0,s.U)(),[P,O]=(0,r.useState)(g),T=[],{blockElementScrollPositionUntilNextRender:F}=(0,u.o5)();if(null!=k){const e=w[k];null!=e&&e!==P&&h.some((t=>t.value===e))&&O(e)}const E=e=>{const t=e.currentTarget,a=T.indexOf(t),n=h[a].value;n!==P&&(F(t),O(n),null!=k&&_(k,String(n)))},D=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=T.indexOf(e.currentTarget)+1;a=null!=(n=T[t])?n:T[0];break}case"ArrowLeft":{var r;const t=T.indexOf(e.currentTarget)-1;a=null!=(r=T[t])?r:T[T.length-1];break}}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,o.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},v)},h.map((e=>{let{value:t,label:a,attributes:l}=e;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:P===t?0:-1,"aria-selected":P===t,key:t,ref:e=>T.push(e),onKeyDown:D,onFocus:E,onClick:E},l,{className:(0,o.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":P===t})}),null!=a?a:t)}))),l?(0,r.cloneElement)(f.filter((e=>e.props.value===P))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},f.map(((e,t)=>(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==P})))))}function m(e){const t=(0,l.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},8912:(e,t,a)=>{a.r(t),a.d(t,{Highlight:()=>p,assets:()=>c,contentTitle:()=>s,default:()=>b,frontMatter:()=>i,metadata:()=>u,toc:()=>d});var n=a(7462),r=(a(7294),a(3905)),o=a(5488),l=a(5162);const i={sidebar_position:9,title:"\ud83c\udfe1 ParkFountains"},s=void 0,u={unversionedId:"Dataset/ParkFountains",id:"Dataset/ParkFountains",title:"\ud83c\udfe1 ParkFountains",description:"Overview",source:"@site/docs/Dataset/ParkFountains.mdx",sourceDirName:"Dataset",slug:"/Dataset/ParkFountains",permalink:"/database/docs/Dataset/ParkFountains",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Dataset/ParkFountains.mdx",tags:[],version:"current",sidebarPosition:9,frontMatter:{sidebar_position:9,title:"\ud83c\udfe1 ParkFountains"},sidebar:"tutorialSidebar",previous:{title:"\ud83c\udfe1 Lake",permalink:"/database/docs/Dataset/Lake"},next:{title:"\ud83c\udfe1 River",permalink:"/database/docs/Dataset/River"}},c={},d=[{value:"Overview",id:"about-ParkFountains",level:2},{value:"Preview",id:"preview",level:3},{value:"Location",id:"location",level:3},{value:"Download Scene",id:"download-scene",level:2},{value:"Scene Analysis",id:"scene-analysis",level:2}],p=e=>{let{children:t,color:a}=e;return(0,r.kt)("span",{style:{backgroundColor:a,borderRadius:"4px",color:"#fff",padding:"0.2rem"}},t)},m={toc:d,Highlight:p};function b(e){let{components:t,...i}=e;return(0,r.kt)("wrapper",(0,n.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"about-ParkFountains"},"Overview"),(0,r.kt)("img",{src:a(4099).Z,alt:"alt text",title:"image Title"}),(0,r.kt)("h3",{id:"preview"},"Preview"),(0,r.kt)("admonition",{title:"YouTube...",type:"info"},(0,r.kt)("p",{parentName:"admonition"},"View the scene on YouTube (8K @ 60fps + 1st-order Ambisonics audio)"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://youtu.be/bCkWThN0Z5U"},"ParkFountains01")))),(0,r.kt)("h3",{id:"location"},"Location"),(0,r.kt)("admonition",{title:"Show me where...",type:"note"},(0,r.kt)("p",{parentName:"admonition"},"Am Stadtpark 67, Neptune Fountain, 90409 N\xfcrnberg ",(0,r.kt)("br",null),"\n\ud83d\udea9 GeoTag: 49.46432652548983, 11.091820352492537")),(0,r.kt)("h2",{id:"download-scene"},"Download Scene"),(0,r.kt)("p",null,"Any variations of this scene can be found below. Comments are provided to describe notable differences. "),(0,r.kt)(o.Z,{className:"unique-tabs",mdxType:"Tabs"},(0,r.kt)(l.Z,{value:"ParkFountains01",mdxType:"TabItem"},(0,r.kt)("p",null,"Scene version note: Typical urban park environment with two fountains, people, cyclist, and birds."),(0,r.kt)("ul",null,(0,r.kt)("li",null,"4OA Audio ",(0,r.kt)("a",{href:"https://avtshare01.rz.tu-ilmenau.de/QoEvaVE_Database/ParkFountains01/ParkFountains01_A_ambiX4_24bit.wav"},"ParkFountains01_A_ambiX4_24bit.wav")),(0,r.kt)("li",null,"8K Video: ",(0,r.kt)("a",{href:"https://avtshare01.rz.tu-ilmenau.de/QoEvaVE_Database/ParkFountains01/ParkFountains01_V_7680x3840_60fps_60s.mkv"},"ParkFountains01_V_7680x3840_60fps_60s.mkv")),(0,r.kt)("li",null,"YouTube: ",(0,r.kt)("a",{href:"https://avtshare01.rz.tu-ilmenau.de/QoEvaVE_Database/ParkFountains01/ParkFountains01_AV_7680x3840_60fps_60s_25Mbps_ambiX1_24bit.mp4"},"ParkFountains01_AV_7680x3840_60fps_60s_25Mbps_ambiX1_24bit.mp4"))),(0,r.kt)("img",{src:a(6982).Z,alt:"alt text",title:"image Title",width:"400",height:"400"}))),(0,r.kt)("details",null,(0,r.kt)("summary",null,"\u2139\ufe0f Naming Conventions"),(0,r.kt)("p",null,"4OA Audio: ",(0,r.kt)("code",null,"SceneName+Version")," > ",(0,r.kt)("code",null,"A (audio)")," > ",(0,r.kt)("code",null,"AmbisonicsFormat+Order")," > ",(0,r.kt)("code",null,"Bit-depth")," "),(0,r.kt)("p",null,"8K Video:  ",(0,r.kt)("code",null,"SceneName+Version")," > ",(0,r.kt)("code",null,"V (video)")," > ",(0,r.kt)("code",null,"Resolution")," > ",(0,r.kt)("code",null,"Frames-per-second")," > ",(0,r.kt)("code",null,"Duration")," "),(0,r.kt)("p",null,"YouTube:   ",(0,r.kt)("code",null,"SceneName+Version")," > ",(0,r.kt)("code",null,"AV (audiovideo)")," > ",(0,r.kt)("code",null,"Resolution")," > ",(0,r.kt)("code",null,"Frames-per-second")," > ",(0,r.kt)("code",null,"Duration")," > ",(0,r.kt)("code",null,"AmbisonicsFormat+Order")," > ",(0,r.kt)("code",null,"Bit-depth"))),(0,r.kt)("h2",{id:"scene-analysis"},"Scene Analysis"),(0,r.kt)("admonition",{title:"Coming Soon...",type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"\ud83d\udd2c Subjective ratings and saliency analysis. ")))}b.isMDXComponent=!0},4099:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ParkFountains_annotated_globe-34da317e4c906f315b53d6302ac4304f.png"},6982:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/ParkFountains01-24fc40502ada125310b1e2171ac14087.png"}}]);